AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "sam-app-test-subtemplates\nUsing nested applications\nTeste de inclus\xE3\
  o de templates secund\xE1rios.\n"
Globals:
  Function:
    Timeout: 3
Parameters:
  EmailFrom:
    Description: Email address used to send email with SES
    Type: String
    Default: jonasrgoes@gmail.com
  StackName:
    Type: String
    Default: nestedappstests
  NotificationEmail:
    Description: Email address used to send alarm notifications
    Type: String
    Default: jonasrgoes@gmail.com
  NotificationEmail2:
    Description: Email address used to send alarm notifications
    Type: String
    Default: jonas@hagas.com.br
Resources:
  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy
      - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
      Policies:
      - PolicyName: Allow-SES
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ses:SendEmail
            - ses:SendRawEmail
            Resource: '*'
            Condition:
              StringEquals:
                ses:FromAddress:
                  Ref: EmailFrom
      - PolicyName: Allow-logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
  AlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Protocol: email
        Endpoint:
          Ref: NotificationEmail
      - Protocol: email
        Endpoint:
          Ref: NotificationEmail2
  HelloStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.us-east-1.amazonaws.com/sam-app-test-subtemplates/tests/7b87cd814b7b5bcdcde0015a588a2447.template
      Parameters:
        StackName:
          Ref: StackName
        NotificationEmail:
          Ref: NotificationEmail
Outputs:
  FunctionRole:
    Value:
      Fn::GetAtt:
      - FunctionRole
      - Arn
    Export:
      Name:
        Fn::Sub: ExportedFunctionRole
  AlarmTopic:
    Value:
      Ref: AlarmTopic
    Export:
      Name:
        Fn::Sub: ExportedAlarmTopic
